% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar.R
\name{tar_move}
\alias{tar_move}
\title{Extract zip contents}
\usage{
tar_move(path, dir = NULL, files = NULL, junk = TRUE, method = "tar")
}
\arguments{
\item{path}{A character vector of zip archives.}

\item{dir}{The directory to extract files to (the equivalent of \code{tar -C}).
It will be created if necessary with \code{\link[=dir_create]{dir_create()}}.}

\item{files}{A character vector of paths to be extracted: the default is to
extract all files. Use \code{\link[=tar_ls]{tar_ls()}} to list contents without extracting.}

\item{junk}{If \code{FALSE} (default), preserve the directories of compressed
files. If \code{TRUE}, use only the basename of the stored path when extracting;
forward slashes in the tarball contents are counted and the maximum amount
are passed to \code{tar --strip-components}.}

\item{method}{The method to be used.}
}
\value{
The path to the extracted files (invisibly).
}
\description{
Decompress the contents of a zip archive and extract them to a single
directory so they can be read. Compared to \code{\link[utils:unzip]{utils::unzip()}}, a directory
\emph{must} be provided in the \code{dir} directory; files are not automatically
extracted to the current working directory. New file paths are returned
invisibly.
}
\examples{
# Extract two files from tarball
tmp <- tempfile(fileext = ".csv")
write.csv(iris, tmp)
txz <- tar_create(tmp)
out <- tar_move(txz, dir = tempdir())
file.size(c(tmp, txz, out))
}
