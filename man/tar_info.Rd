% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar.R
\name{tar_info}
\alias{tar_info}
\alias{tar_ls}
\alias{tar_size}
\title{List tar contents}
\usage{
tar_info(path, method = Sys.getenv("TAR"))

tar_ls(path, method = "internal")

tar_size(path, sum = TRUE, method = "tar")
}
\arguments{
\item{path}{A character vector of tarball archives.}

\item{method}{The method to be used. Passed to \code{utils::tar()}. An alternative
is to use \code{Sys.getenv("TAR")}.}

\item{sum}{If \code{TRUE} (default) the summed size of archive contents is
returned invisibly and a message comparing sizes is printed. If \code{FALSE},
the uncompressed size of all contents is returned as a numeric \code{fs_bytes}
vector.}
}
\description{
\code{\link[=tar_info]{tar_info()}} is the equivalent to the \code{tar -tf} command. It returns a data
frame (like \code{\link[fs:dir_ls]{fs::dir_info()}}).

\code{\link[=tar_ls]{tar_ls()}} also uses \code{tar -tf} but only returns the filenames within the
archive as a named \code{fs_path} character vector (like \code{\link[fs:dir_ls]{fs::dir_ls()}}).
}
\examples{
\dontrun{
# List two files from zip
irs <- tempfile(fileext = ".csv")
write.csv(iris, irs)
mtc <- tempfile(fileext = ".csv")
write.csv(mtcars, mtc)
txz <- tempfile(fileext = ".tar")
tar_create(c(irs, mtc), txz)
tar_size(txz)
tar_info(txz)
tar_ls(txz)
}
}
