% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zip.R
\name{zip_move}
\alias{zip_move}
\title{Extract zip contents}
\usage{
zip_move(
  path,
  dir = NULL,
  files = NULL,
  overwrite = TRUE,
  junk = FALSE,
  method = "internal"
)
}
\arguments{
\item{path}{A character vector of zip archives.}

\item{dir}{The directory to extract files to (the equivalent of \code{unzip -d}).
It will be created if necessary with \code{\link[=dir_create]{dir_create()}}.}

\item{files}{A character vector of paths to be extracted: the default is to
extract all files. Use \code{\link[=zip_ls]{zip_ls()}} to list contents without extracting.}

\item{overwrite}{If \code{TRUE} (default), overwrite existing files (the
equivalent of \code{unzip -o}), otherwise ignore such files (the equivalent of
\code{unzip -n}).}

\item{junk}{If \code{FALSE} (default), preserve the directories of compressed
files. If \code{TRUE}, use only the basename of the stored path when extracting
(the equivalent of \code{unzip -j}).}

\item{method}{The method to be used. An alternative is to use
\code{getOption("unzip")}, which on a Unix-alike may be set to the path to a
unzip program.}
}
\value{
The path to the extracted files (invisibly).
}
\description{
Decompress the contents of a zip archive and extract them to a single
directory so they can be read. Compared to \code{\link[utils:unzip]{utils::unzip()}}, a directory
\emph{must} be provided in the \code{dir} directory; files are not automatically
extracted to the current working directory. New file paths are returned
invisibly.
}
\examples{
# Extract two files from zip
tmp <- path_temp("iris.csv")
write.csv(iris, tmp)
zip <- zip_create(tmp, junk = TRUE)
out <- zip_move(zip, dir = path_temp("out"))
file_size(c(tmp, zip, out))
}
